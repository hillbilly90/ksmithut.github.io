// .rem(@property, @values...)
//
// gives a property a rem value with a pixel fallback
.rem-init(@basePxValue: 16) {
  html, body {
    font-size: unit(@basePxValue, px);
  }

  .rem(@property; @pxValue) {
    @{property}: unit(@pxValue, px);
    @{property}: unit(@pxValue / @basePxValue, rem);
  }

  .rem-padding(@top; @right; @bottom; @left) {
    @toppx: unit(@top, px);
    @rightpx: unit(@right, px);
    @bottompx: unit(@bottom, px);
    @leftpx: unit(@left, px);
    @toprem: unit(@top / @basePxValue, rem);
    @rightrem: unit(@right / @basePxValue, rem);
    @bottomrem: unit(@bottom / @basePxValue, rem);
    @leftrem: unit(@left / @basePxValue, rem);
    padding: @toppx @rightpx @bottompx @leftpx;
    padding: @toprem @rightrem @bottomrem @leftrem;
  }

  .rem-margin(@top; @right; @bottom; @left) {
    @toppx: unit(@top, px);
    @rightpx: unit(@right, px);
    @bottompx: unit(@bottom, px);
    @leftpx: unit(@left, px);
    @toprem: unit(@top / @basePxValue, rem);
    @rightrem: unit(@right / @basePxValue, rem);
    @bottomrem: unit(@bottom / @basePxValue, rem);
    @leftrem: unit(@left / @basePxValue, rem);
    margin: @toppx @rightpx @bottompx @leftpx;
    margin: @toprem @rightrem @bottomrem @leftrem;
  }
}

.clearfix() {
  &::after,
  &::before {
    display: table;
    content: ' ';
  }
  &::after {
    clear: both;
  }
}

@screenLarge: 1200;
@screenMedium: 992;
@screenSmall: 768;

.grid-init(@numCols: 12; @gutterWidth: 30) {

  @halfGutterWidth: (@gutterWidth / 2);

  .container-responsive() {
    width: 100%;
    margin-left: auto;
    margin-right: auto;
    .rem(padding-left, @halfGutterWidth);
    .rem(padding-right, @halfGutterWidth);
  }

  .container() {
    .container-responsive();
    @media (min-width: unit(@screenSmall, px)) {
      .rem(width, @screenSmall - @gutterWidth);
    }
    @media (min-width: unit(@screenMedium, px)) {
      .rem(width, @screenMedium - @gutterWidth);
    }
    @media (min-width: unit(@screenLarge, px)) {
      .rem(width, @screenLarge - @gutterWidth);
    }
  }

  .row() {
    .clearfix();
    .rem(margin-left, -@halfGutterWidth);
    .rem(margin-right, -@halfGutterWidth);
  }

  .col() {
    float: left;
    width: 100%;
    .rem(padding-left, @halfGutterWidth);
    .rem(padding-right, @halfGutterWidth);
  }

  .col-xs(@cols: 1) when (@cols <= @numCols) and (@cols > 0) {
    width: percentage(@cols / @numCols);
  }
  .col-sm(@cols: 1) when (@cols <= @numCols) and (@cols > 0) {
    @media (min-width: unit(@screenSmall, px)) {
      width: percentage(@cols / @numCols);
    }
  }
  .col-md(@cols: 1) when (@cols <= @numCols) and (@cols > 0) {
    @media (min-width: unit(@screenMedium, px)) {
      width: percentage(@cols / @numCols);
    }
  }
  .col-lg(@cols: 1) when (@cols <= @numCols) and (@cols > 0) {
    @media (min-width: unit(@screenLarge, px)) {
      width: percentage(@cols / @numCols);
    }
  }

}
